replicaCount: 1

image:
  repository: opxhub/aptly-server
  tag: 2.2.1-3
  pullPolicy: IfNotPresent

aptly:
  key: ""

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
  path: /
  hosts:
    - deb.opx.openswitch.net
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

api:
  port: 8080
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: "true"
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      # type of authentication
      nginx.ingress.kubernetes.io/auth-type: basic
      # name of the secret that contains the user/password definitions
      nginx.ingress.kubernetes.io/auth-secret: aptly-api-auth
      # message to display with an appropiate context why the authentication is required
      nginx.ingress.kubernetes.io/auth-realm: "Authentication Required - Aptly API"
    path: /
    hosts:
      - aptly-stg.opx.openswitch.net
    tls:
    - secretName: aptly-stg-opx-openswitch-net
      hosts:
        - aptly-stg.opx.openswitch.net

persistence:
  enabled: true
  ## database data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  existingClaim: "aptly"
  accessMode: ReadWriteOnce
  size: 200Gi

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  requests:
    cpu: "100m"
    memory: "128Mi"

nodeSelector: {}

tolerations: []

affinity: {}
